{"version":3,"sources":["pages/Login/store/reducer.js","pages/Login/store/constants.js","service/Service.js","pages/Login/store/actionCreators.js","pages/Login/API/httpService.js","pages/Login/store/index.js","store/reducer.js","store/index.js","router/routerFrontendAuth.js","layouts/page-loading/index.js","utils/loadable.js","router/routerConfig.js","router/index.js","App.js","serviceWorker.js","index.js"],"names":["defaultState","fromJS","login","loginBtnLoadingStatus","errorTipsMessage","devUserName","devPassWord","reducer","state","arguments","length","undefined","action","type","set","value","history","createHashHistory","axios","defaults","timeout","baseURL","openNotificationWithIcon","_ref","_ref$type","_ref$message","message","_ref$description","description","notification","interceptors","request","use","config","location","pathname","token","localStorage","getItem","replace","search","concat","encodeURIComponent","window","href","headers","console","log","data","JSON","stringify","Content-Type","error","Promise","reject","response","status","resolve","Service","get","_ref2","url","_ref2$params","params","_ref2$isShowResInCons","isShowResInConsole","isShowLoading","Object","objectSpread","_t","Date","getTime","then","info","catch","err","post","_ref3","_ref3$data","_ref3$isShowResInCons","patch","put","jsonp","paramters","global","body","document","scriptID","Math","round","random","callbackName","script","createElement","id","commonData","requestPara","key","hasOwnProperty","reqData","Array","substr","indexOf","src","onerror","appendChild","test","getElementById","removeChild","setTimeout","changeLoadingStatus","changeErrorTipsMessage","accout","password","dispatch","res","getMyExchangeList","__webpack_require__","d","__webpack_exports__","actionCreators_namespaceObject","combineReducers","loginReducer","composeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunk","FrontendAuth","_React$Component","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","apply","inherits","createClass","_this$props","props","isLogin","targetRouterConfig","find","v","path","auth","component","react","react_router","exact","to","React","Index","_getPrototypeOf2","_this","_len","_key","call","NProgress","start","done","react_default","a","style","display","alignItems","justifyContent","position","top","right","bottom","left","spin","size","spinning","Component","loadable","loader","loading","PageLoading","Loadable","Header","all","e","bind","Error404","Error401","routerConfig","Router","react_router_dom","routerFrontendAuth_FrontendAuth","App","es","router_Router","Boolean","hostname","match","ReactDOM","render","src_App_0","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.67624c9c.chunk.js","sourcesContent":["import { fromJS } from 'immutable';\nimport * as constants from './constants';\n\nconst defaultState = fromJS({\n  login: true,\n  loginBtnLoadingStatus: false,\n  errorTipsMessage: '',\n  devUserName:'admin',\n  devPassWord:'111'\n});\n\nexport default (state = defaultState, action) => {\n\tswitch(action.type) {\n\t\tcase constants.CHANGE_LOGIN:\n\t\t\treturn state.set('login', action.value);\n\t\tcase constants.LOGOUT:\n\t\t\treturn state.set('login', action.value);\n\t\tcase constants.CHANGE_LOADING_STATUS:\n\t\t\treturn state.set('loginBtnLoadingStatus', action.value);\n\t\tcase constants.CHANGE_ERROR_TIPS_MESSAGE:\n\t\t\treturn state.set('errorTipsMessage', action.value);\n\t\tdefault:\n\t\t\treturn state;\n\t}\n}","export const CHANGE_LOGIN = 'login/CHANGE_LOGIN'\nexport const LOGOUT = 'login/LOGOUT'\nexport const CHANGE_LOADING_STATUS = 'login/CHANGE_LOADING_STATUS'\nexport const CHANGE_ERROR_TIPS_MESSAGE = 'login/CHANGE_ERROR_TIPS_MESSAGE'\n","import axios from 'axios'\r\nimport { notification } from 'antd';\r\nimport { createHashHistory } from 'history';\r\nconst history = createHashHistory();\r\n\r\naxios.defaults.timeout = 5000\r\naxios.defaults.baseURL = ''\r\n\r\nconst openNotificationWithIcon = ({type='error',message='error',description='呀～，网络不给力'}={}) => {\r\n  notification[type]({\r\n    message,\r\n    description\r\n  });\r\n};\r\n\r\n\r\n\r\n// const LOGIN_HASH = '#login'\r\n\r\n// http request 拦截器\r\n// config  修改请求的所有配置\r\naxios.interceptors.request.use(\r\n  config => {\r\n    if (history.location.pathname !== '/login') {\r\n      const token = localStorage.getItem('__config_center_token')\r\n      if (token == null) {\r\n        history.replace({\r\n          pathname: '/login',\r\n          search: `?query=${encodeURIComponent(window.location.href)}`\r\n        });\r\n        return false\r\n      } else {\r\n        config.headers['token'] = token\r\n      }\r\n    }\r\n    console.log(history);\r\n\r\n    config.data = JSON.stringify(config.data)\r\n    config.headers = {\r\n      'Content-Type': 'application/x-www-form-urlencoded'\r\n    }\r\n    // config.headers.referer = '//supervippre.cnsuning.com'\r\n    // config.headers.host = 'supervippre.cnsuning.com'\r\n    // if(token){\r\n    //   config.params = {'token':token}\r\n    // }\r\n    return config\r\n  },\r\n  error => {\r\n    openNotificationWithIcon()\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\n// http response 拦截器\r\n// 同意处理返回结果\r\naxios.interceptors.response.use(\r\n  response => {\r\n    // if (response.data.errCode == 2) {\r\n    //     router.push({\r\n    //         path: \"/login\",\r\n    //         querry: { redirect: router.currentRoute.fullPath }//从哪个页面跳转\r\n    //     })\r\n    // }\r\n    return response\r\n  },\r\n  error => {\r\n    if (error.response !== undefined) {\r\n      switch (error.response.status) {\r\n        case 401:\r\n          history.replace({\r\n            pathname: '/login',\r\n            search: `?query=${encodeURIComponent(window.location.href)}`\r\n          });\r\n          break\r\n        case 403:\r\n          history.replace({\r\n            pathname: '/401'\r\n          });\r\n          break\r\n        default:\r\n          openNotificationWithIcon({message:error.response.status,description:error.response.data})\r\n      }\r\n      return Promise.resolve(error.response)\r\n    }\r\n    return Promise.reject(error)\r\n  }\r\n)\r\n\r\nclass Service {\r\n  /**\r\n       * 请求服务端接口函数,返回promise\r\n       * @param {string} url 请求地址\r\n       * @param {Object} paramters 请求参数\r\n       * @param {string} type 请求类型(默认get方式)\r\n       * @returns {Object} 返回的promise对象\r\n       */\r\n  // static reqServer (url, paramters = {}, type = 'GET') {\r\n\r\n  // }\r\n\r\n  /**\r\n   * 封装get方法\r\n   * @param url\r\n   * @param data\r\n   * @returns {Promise}\r\n   */\r\n  static get = ({ url, params = {}, isShowResInConsole = false, isShowLoading = false }) => {\r\n    // const toast = isShowLoading && Toast.loading({\r\n    //   duration: 0, // 持续展示 toast\r\n    //   forbidClick: true, // 禁用背景点击\r\n    //   message: '正在加载'\r\n    // })\r\n    return new Promise((resolve, reject) => {\r\n      axios.get(url, {\r\n        params: { ...params, _t: new Date().getTime() }\r\n      }).then(response => {\r\n        isShowResInConsole && console.info(`%c get回调:server:url=${url}  \\n [result]=`, 'color:red;font-size:16px', response.data)\r\n        // isShowLoading && toast.clear()\r\n        resolve(response.data)\r\n      }).catch(err => {\r\n        // isShowLoading && toast.clear()\r\n        reject(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * 封装post请求\r\n   * @param url\r\n   * @param data\r\n   * @returns {Promise}\r\n   */\r\n  static post = ({ url, data = {}, isShowResInConsole = false, isShowLoading = false }) => {\r\n    // const toast = isShowLoading && Toast.loading({\r\n    //   duration: 0, // 持续展示 toast\r\n    //   forbidClick: true, // 禁用背景点击\r\n    //   message: '正在加载'\r\n    // })\r\n    return new Promise((resolve, reject) => {\r\n      axios.post(url, data).then(response => {\r\n        isShowResInConsole && console.info(`%c post回调:server:url=${url}  \\n [result]=`, 'color:red;font-size:16px', response.data)\r\n        // isShowLoading && toast.clear()\r\n        resolve(response.data)\r\n      }, err => {\r\n        // isShowLoading && toast.clear()\r\n        reject(err)\r\n      })\r\n    })\r\n  }\r\n\r\n  /**\r\n  * 封装patch请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n  static patch = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      axios.patch(url, data)\r\n        .then(response => {\r\n          resolve(response.data)\r\n        }, err => {\r\n          reject(err)\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n  * 封装put请求\r\n  * @param url\r\n  * @param data\r\n  * @returns {Promise}\r\n  */\r\n  static put = (url, data = {}) => {\r\n    return new Promise((resolve, reject) => {\r\n      axios.put(url, data)\r\n        .then(response => {\r\n          resolve(response.data)\r\n        }, err => {\r\n          reject(err)\r\n        })\r\n    })\r\n  }\r\n\r\n  /**\r\n   * jsonp方式请求\r\n   * @param url 请求url\r\n   * @param paramters 请求参数\r\n   * @param timeout 超时时间，默认30秒\r\n   * @returns {Function}\r\n   */\r\n  static jsonp = function (url, paramters, timeout = 30000) {\r\n    // if (Const && Const.server) {\r\n    //     url = Const.server + url;\r\n    // }\r\n\r\n    var global = window\r\n    var body = document.body\r\n\r\n    return new Promise(function (resolve, reject) {\r\n      // 回调参数名称\r\n      var scriptID = Math.round(100000 * Math.random())\r\n      var callbackName = 'jsonp_callback_' + scriptID\r\n      var script = document.createElement('script')\r\n      script.id = scriptID\r\n      // 请求公共参数处理\r\n      var commonData = ''\r\n      if (typeof (Service.requestPara) === 'object') {\r\n        for (let key in Service.requestPara) {\r\n          // 请求参数拼接\r\n          if (Service.requestPara.hasOwnProperty(key)) {\r\n            commonData += key + '=' + encodeURIComponent(Service.requestPara[key]) + '&'\r\n          }\r\n        }\r\n        commonData += 't=' + new Date().getTime()\r\n      } else {\r\n        commonData += 't=' + new Date().getTime()\r\n      }\r\n\r\n      // console.info('jsonp请求公共参数commonData=', commonData);\r\n\r\n      // 请求参数\r\n      let reqData = ''\r\n      if (typeof (paramters) === 'object') {\r\n        for (let key in paramters) {\r\n          // 请求参数拼接\r\n          if (paramters.hasOwnProperty(key)) {\r\n            // 传参为数组时， 需要解析成json字符串\r\n            if (paramters[key] instanceof Array) {\r\n              reqData += key + '=' + encodeURIComponent(JSON.stringify(paramters[key])) + '&'\r\n            } else {\r\n              reqData += key + '=' + encodeURIComponent(paramters[key]) + '&'\r\n            }\r\n          }\r\n        }\r\n        reqData = reqData.substr(0, reqData.length - 1)\r\n      }\r\n\r\n      if (reqData || commonData) {\r\n        url = url + (url.indexOf('?') >= 0 ? '&' : '?') + reqData + '&' + commonData\r\n      }\r\n\r\n      script.src = url + (url.indexOf('?') >= 0 ? '&' : '?') + 'callback=' + callbackName\r\n\r\n      // If we fail to get the script, reject the promise.\r\n      script.onerror = function (err) {\r\n        /* eslint-disable */\r\n        reject(`失败：请求, ${err}`)\r\n        /* eslint-enable */\r\n      }\r\n\r\n      body.appendChild(script)\r\n      if (/callback=?/.test(url)) {\r\n        url = url.replace('=?', '=' + callbackName)\r\n      }\r\n\r\n      global[callbackName] = function (data) {\r\n        // console.info(`%c jsonp请求url=${url} \\n  [result]=`, 'color:red;font-size:16px', data)\r\n        // if(data && data.errno !==0) {\r\n        //     Toast.toastInstance(`服务器开小差:${data.errstr}`,2000);\r\n        // }\r\n        if (data) {\r\n          resolve(data)\r\n        } else {\r\n          /* eslint-disable */\r\n          reject('请求失败')\r\n          /* eslint-enable */\r\n        }\r\n\r\n        // Clean up.\r\n        global[callbackName] = null\r\n        delete global[callbackName]\r\n        if (document.getElementById(scriptID)) {\r\n          body.removeChild(script)\r\n        }\r\n      }\r\n\r\n      // 十秒超时处理\r\n      setTimeout(function () {\r\n        if (document.getElementById(scriptID)) {\r\n          console.log('请求超时：', script.src)\r\n          global[callbackName] = null\r\n          delete global[callbackName]\r\n          body.removeChild(script)\r\n        }\r\n      }, timeout)\r\n    })\r\n  };\r\n}\r\n\r\nexport default Service\r\n","import * as constants from './constants';\nimport {getMyExchangeList } from './../API/httpService'\n\n// const changeLogin = () => ({\n// \ttype: constants.CHANGE_LOGIN,\n// \tvalue: true\n// })\n\nexport const changeLoadingStatus = (value) => ({\n\ttype: constants.CHANGE_LOADING_STATUS,\n\tvalue\n})\n\nexport const changeErrorTipsMessage = (value) => ({\n\ttype: constants.CHANGE_ERROR_TIPS_MESSAGE,\n\tvalue\n})\n\nexport const login = (accout, password) => {\n\treturn (dispatch) => {\n    getMyExchangeList()\n\t}\n}","import Service from './../../../service/Service'\r\n\r\nexport function getMyExchangeList (params = {}) {\r\n  const isShowResInConsole = true\r\n  const isShowLoading = true\r\n  const url = '/api/detail'\r\n  return Service.get({ url, params, isShowResInConsole, isShowLoading }).then(res => {\r\n    return Promise.resolve(res)\r\n  }).catch(error => {\r\n    return Promise.reject(error)\r\n  })\r\n}\r\n","import reducer from './reducer'\nimport * as actionCreators from './actionCreators'\nimport * as constants from './constants'\n\nexport { reducer, actionCreators, constants }\n","import { combineReducers } from 'redux-immutable'\nimport { reducer as loginReducer } from '../pages/Login/store'\n\nconst reducer = combineReducers({\n  login: loginReducer\n})\n\nexport default reducer\n","import { createStore, compose, applyMiddleware } from 'redux'\nimport thunk from 'redux-thunk'\nimport reducer from './reducer'\n\n// 开启devtools\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose\nconst store = createStore(reducer, composeEnhancers(\n  applyMiddleware(thunk) // 开启异步\n))\n\nexport default store\n","import * as React from 'react';\nimport { Route, Redirect } from 'react-router-dom';\n\nexport class FrontendAuth extends React.Component {\n  componentDidMount() {\n    console.log('路由切换后==========');\n  }\n  render() {\n    const { location, config } = this.props;\n    const { pathname } = location;\n    const isLogin = localStorage.getItem('__config_center_token')\n    console.log(`路由切换前----------${isLogin || '未登录'}`);\n    console.log(`${pathname}`);\n    console.log('----------路由切换前');\n\n    // 如果该路由不用进行权限校验，登录状态下登陆页除外\n    // 因为登陆后，无法跳转到登陆页\n    // 这部分代码，是为了在非登陆状态下，访问不需要权限校验的路由\n    const targetRouterConfig = config.find((v) => v.path === pathname);\n\n\n    if (targetRouterConfig && !targetRouterConfig.auth && !isLogin) {\n      const { component } = targetRouterConfig;\n      return <Route component={component}\n          exact\n          path={pathname}\n             />\n    }\n\n    if (isLogin) {\n      // 如果是登陆状态，想要跳转到登陆，重定向到主页\n      if (pathname === '/login') {\n        return <Redirect to=\"/\" />\n      } else {\n        // 如果路由合法，就跳转到相应的路由\n        if (targetRouterConfig) {\n          return <Route component={targetRouterConfig.component}\n              path={pathname}\n                 />\n        } else {\n          // 如果路由不合法，重定向到 404 页面\n          return <Redirect to=\"/404\" />\n        }\n      }\n    } else {\n      // 非登陆状态下，当路由合法时且需要权限校验时，跳转到登陆页面，要求登陆\n      if (targetRouterConfig && targetRouterConfig.auth) {\n        return <Redirect to=\"/login\" />\n      } else {\n        // 非登陆状态下，路由不合法时，重定向至 404\n        return <Redirect to=\"/404\" />\n      }\n    }\n  }\n}","import React, {Component} from 'react';\nimport {Spin} from 'antd';\nimport NProgress from 'nprogress';\nimport 'nprogress/nprogress.css';\n\nexport default class Index extends Component {\n    constructor(...props) {\n        super(...props);\n        NProgress.start();\n    }\n\n    componentWillUnmount() {\n        NProgress.done();\n    }\n\n    render() {\n        const style = {\n            display: 'flex',\n            alignItems: 'center',\n            justifyContent: 'center',\n            position: 'absolute',\n            top: 0,\n            right: 0,\n            bottom: 0,\n            left: 0\n        };\n        return (\n            <div style={style}>\n                <Spin size=\"large\"\n                    spinning\n                />\n            </div>\n        );\n    }\n}\n","// import React from 'react'\nimport Loadable from 'react-loadable'\n// import { Spin } from 'antd';\nimport PageLoading from './../layouts/page-loading';\n\n// 通用的过场组件\n// const loadingComponent = () => {\n//   return (\n//     <div>\n//       <Spin size=\"large\" />\n//     </div>\n//   )\n// }\n\n// 过场组件默认采用通用的，若传入了loading，则采用传入的过场组件\nexport default (loader, loading = PageLoading) => {\n  return Loadable({\n    loader,\n    loading\n  })\n}\n","\n\nimport loadable from './../utils/loadable'\n// import Error404 from './../pages/Error404'\n// import Error401 from './../pages/Error401'\n// import Login from './../pages/Login'\n// import Header from './../common/Header'\n\nconst Header = loadable(() => import('./../common/Header'))\nconst Error404 = loadable(() => import('./../pages/Error404'))\nconst Error401 = loadable(() => import('./../pages/Error401'))\nconst Login = loadable(() => import('./../pages/Login'))\n\nexport const routerConfig = [\n    {\n        path:'/',\n        component:Header,\n        auth:true\n    },{\n        path:'/home',\n        component:Header,\n        auth:true\n    },{\n        path:'/login',\n        component:Login\n    },{\n        path:'/401',\n        component:Error401\n    },{\n        path:'/404',\n        component:Error404\n    }\n]\n","import * as React from 'react';\nimport { HashRouter,Switch } from 'react-router-dom';\nimport { FrontendAuth } from './routerFrontendAuth'\nimport { routerConfig } from './routerConfig'\n\nexport default class Router extends React.Component{\n    render(){\n        return(\n            <HashRouter>\n                <Switch>\n                    <FrontendAuth config={routerConfig} />\n                </Switch>\n            </HashRouter>\n        );\n    }\n}","import React, { Component } from 'react'\nimport { Provider } from 'react-redux'\n// import { HashRouter, Route,Switch } from 'react-router-dom'\nimport './App.css'\nimport store from './store'\n// import loadable from './utils/loadable'\n// import Error404 from './pages/Error404'\n// import Error401 from './pages/Error401'\n// import Login from './pages/Login'\n\n// import Header from './common/Header'\nimport Router from './router'\n\n// const Header = loadable(() => import('./common/Header'))\n// const Error404 = loadable(() => import('./pages/Error404'))\n// const Error401 = loadable(() => import('./pages/Error401'))\n// const Login = loadable(() => import('./pages/Login'))\n\nclass App extends Component {\n  // constructor(props){\n\t// \tsuper\t(props)\n\t// }\n  render () {\n\t\t// const layoutRouter = (\n    //   <div>\n    //     <Header></Header>\n    //     <Switch>\n\t\t// \t\t\t<Route path='/' exact component={Header}></Route>\n\t\t// \t\t\t<Route path='/401' exact component={Error401}></Route>\n    //       <Route component={Error404}/>\n\t\t// \t\t</Switch>\n    //   </div>\n    // )\n    return (\n      <Provider store={store}>\n        <Router></Router>\n      </Provider>\n    )\n  }\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n)\n\nexport function register (config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href)\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config)\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          )\n        })\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config)\n      }\n    })\n  }\n}\n\nfunction registerValidSW (swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing\n        if (installingWorker == null) {\n          return\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              )\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration)\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.')\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration)\n              }\n            }\n          }\n        }\n      }\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error)\n    })\n}\n\nfunction checkValidServiceWorker (swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type')\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload()\n          })\n        })\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config)\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      )\n    })\n}\n\nexport function unregister () {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister()\n    })\n  }\n}\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport './index.css'\nimport App from './App'\nimport * as serviceWorker from './serviceWorker'\nimport 'normalize.css'\n// import 'lib-flexible'\n\nReactDOM.render(<App />, document.getElementById('root'))\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister()\n"],"sourceRoot":""}