{"version":3,"sources":["pages/Login/style.js","pages/Login/components/LoginWrapper.js","pages/Login/index.js"],"names":["LoginWrapper","styled","div","_templateObject","NormalLoginFormBox","_templateObject2","history","createHashHistory","Login","handleSubmit","e","preventDefault","_this","props","form","validateFields","err","values","console","log","changeLoadingStatus","setTimeout","location","search","window","href","URLSearchParams","get","replace","pathname","_this$props","this","_this$props$form","setFieldsValue","userName","passWord","login","fieldsError","_this$props$form2","getFieldDecorator","getFieldsError","getFieldError","isFieldTouched","_this$props2","loading","message","userNameError","passwordError","react_default","a","createElement","Helmet","title","className","es_form","onSubmit","Item","help","validateStatus","rules","required","input","allowClear","autoFocus","placeholder","prefix","icon","style","color","type","Password","valuePropName","initialValue","es_checkbox","es_button","disabled","Object","keys","some","field","htmlType","PureComponent","WrappedNormalLoginForm","create","name","connect","state","getIn","dispatch","value","actionCreators","changeErrorTipsMessage","components_LoginWrapper","loginStatus"],"mappings":"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","file":"static/js/9.9a0aa323.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const LoginWrapper = styled.div`\nz-index: 0;\nposition: absolute;\nleft: 0;\nright: 0;\nbottom: 0;\ntop: 56px;\n`\n\nexport const NormalLoginFormBox = styled.div`\n  width: 360px;\n  padding: 16px 32px;\n  margin:0 auto;\n  background: #eee;\n  box-shadow: 0 0 100px rgba(0, 0, 0, 0.08);\n  .login-form-forgot {\n    float: right;\n  }\n  .login-form-button {\n    width: 100%;\n  }\n  .login-header-title{\n    font-size: 18px;\n    text-align: center;\n    padding: 16px;\n    color: #808080;\n  }\n  .error-tip{\n    height: 30px;\n    line-height: 30px;\n    text-align: center;\n    color: red;\n  }\n`\n","import React, { PureComponent } from 'react'\nimport { connect } from 'react-redux'\nimport { LoginWrapper, NormalLoginFormBox } from './../style'\nimport { Helmet } from 'react-helmet'\nimport { Form, Icon, Input, Button, Checkbox } from 'antd'\nimport { actionCreators } from './../store'\nimport { createHashHistory } from 'history';\nconst history = createHashHistory();\n\nfunction hasErrors (fieldsError) {\n  return Object.keys(fieldsError).some(field => fieldsError[field])\n}\n\nclass Login extends PureComponent {\n  componentDidMount () {\n    const { form: { validateFields ,setFieldsValue},userName ,passWord} = this.props\n    // 一开始禁用提交按钮\n    validateFields(() => void 0)\n    if (process.env.NODE_ENV === 'development') {\n      setFieldsValue({userName, passWord});\n    }\n    // 测试接口\n    this.props.login()\n  }\n\n  handleSubmit = e => {\n    e.preventDefault()\n    this.props.form.validateFields((err, values) => {\n      if (!err) {\n        console.log('Received values of form: ', values)\n        this.props.changeLoadingStatus(true)\n        // const { userName, password } = values\n        setTimeout(() => {\n          this.props.changeLoadingStatus(false)\n          if(history.location.search){\n            window.location.href = new URLSearchParams(history.location.search).get('query')\n          }else{\n            history.replace({\n              pathname: '/'\n            });\n          }\n\n          //   // 当需要指定登陆用户时，前端可以写死\n          // let userA = userName === 'admin' && password === '111'\n          // let userB = userName === 'admin2' && password === '222'\n          // if (userA || userB) {\n          // } else {\n          //   this.props.changeErrorTipsMessage('用户名或密码错误！!' )\n          // }\n        }, 1000)\n      }\n    })\n  };\n  render () {\n    const { getFieldDecorator, getFieldsError, getFieldError, isFieldTouched } = this.props.form\n    const { loading, message } = this.props\n    const userNameError = isFieldTouched('userName') && getFieldError('userName')\n    const passwordError = isFieldTouched('passWord') && getFieldError('passWord')\n      return (\n        <LoginWrapper>\n          <Helmet\n              title=\"登录\"\n          />\n          <NormalLoginFormBox>\n            <div className=\"login-header-title\">欢迎登录</div>\n            <Form className=\"login-form\"\n                onSubmit={this.handleSubmit}\n            >\n              <Form.Item\n                  help={userNameError || ''}\n                  validateStatus={userNameError ? 'error' : ''}\n              >\n                {getFieldDecorator('userName', {\n                  rules: [{ required: true, message: 'Please input your username!' }]\n                })(\n                  <Input allowClear\n                      autoFocus\n                      placeholder=\"Username\"\n                      prefix={<Icon style={{ color: 'rgba(0,0,0,.25)' }}\n                          type=\"user\"\n                              />}\n                  />\n                )}\n              </Form.Item>\n              <Form.Item\n                  help={passwordError || ''}\n                  validateStatus={passwordError ? 'error' : ''}\n              >\n                {getFieldDecorator('passWord', {\n                  rules: [{ required: true, message: 'Please input your password!' }]\n                })(\n                  <Input.Password\n                      placeholder=\"Password\"\n                      prefix={<Icon style={{ color: 'rgba(0,0,0,.25)' }}\n                          type=\"lock\"\n                              />}\n                      type=\"password\"\n                  />\n                )}\n              </Form.Item>\n              <Form.Item>\n                {getFieldDecorator('remember', {\n                  valuePropName: 'checked',\n                  initialValue: true\n                })(<Checkbox>Remember me</Checkbox>)}\n                <a\n                    className=\"login-form-forgot\"\n                    href=\"javascript:void(0)\"\n                >\n                  Forgot password\n                </a>\n                <Button\n                    className=\"login-form-button\"\n                    disabled={hasErrors(getFieldsError())}\n                    htmlType=\"submit\"\n                    loading={loading}\n                    type=\"primary\"\n                >\n                  Log in\n                </Button>\n                Or <a href=\"javascript:void(0)\">register now!</a>\n              </Form.Item>\n            </Form>\n            <div className=\"error-tip\">{message}</div>\n          </NormalLoginFormBox>\n        </LoginWrapper>\n      )\n  }\n}\n\nconst WrappedNormalLoginForm = Form.create({ name: 'normal_login' })(Login)\n\nconst mapStateToProps = (state) => ({\n  loading: state.getIn(['login', 'loginBtnLoadingStatus']),\n  message: state.getIn(['login', 'errorTipsMessage']),\n  userName: state.getIn(['login', 'devUserName']),\n  passWord: state.getIn(['login', 'devPassWord'])\n})\n\nconst mapDispathToProps = (dispatch) => ({\n\tchangeLoadingStatus(value) {\n    dispatch(actionCreators.changeLoadingStatus(value))\n  },\n\tchangeErrorTipsMessage(value) {\n    dispatch(actionCreators.changeErrorTipsMessage(value))\n  },\n  login(){\n    dispatch(actionCreators.login())\n  }\n})\n\nexport default connect(mapStateToProps, mapDispathToProps)(WrappedNormalLoginForm)\n","import React, { PureComponent } from 'react'\n// import { Redirect } from 'react-router-dom'\nimport { connect } from 'react-redux'\nimport LoginWrapper from './components/LoginWrapper'\n// import { actionCreators } from './store'\n\nclass Login extends PureComponent {\n  render () {\n      return (\n        <LoginWrapper />\n      )\n  }\n}\n\n\nconst mapStateToProps = (state) => ({\n  loginStatus: state.getIn(['login', 'login'])\n})\n\nconst mapDispatchToProps = () => ({\n\n})\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)\n"],"sourceRoot":""}